@using ShoeStore.Models
@model CheckoutViewModel

<div class="site-section">
    <div class="container">
        <form asp-action="Checkout" asp-controller="Cart" method="post">
            <div class="row">
                <div class="col-md-6 mb-5 mb-md-0">
                    <h2 class="h3 mb-3 text-black">Thông tin đặt hàng</h2>
                    <div class="p-3 p-lg-5 border">
                        <div class="form-group">
                            <label asp-for="FullName" class="text-black">Họ tên <span class="text-danger">*</span></label>
                            <input asp-for="FullName" class="form-control" required>
                        </div>

                        <div class="form-group">
                            <label asp-for="PhoneNumber" class="text-black">Số điện thoại <span class="text-danger">*</span></label>
                            <input asp-for="PhoneNumber" class="form-control" required>
                        </div>

                        <div class="form-group">
                            <label class="text-black">Tỉnh/Thành phố <span class="text-danger">*</span></label>
                            <select id="province" name="ProvinceCode" class="form-control" required>
                                <option value="">Chọn Tỉnh/Thành phố</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label class="text-black">Quận/Huyện <span class="text-danger">*</span></label>
                            <select id="district" name="DistrictCode" class="form-control" required>
                                <option value="">Chọn Quận/Huyện</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label class="text-black">Phường/Xã <span class="text-danger">*</span></label>
                            <select id="ward" name="WardCode" class="form-control" required>
                                <option value="">Chọn Phường/Xã</option>
                            </select>
                        </div>

                        <div class="form-group">
                            <label asp-for="AddressDetail" class="text-black">Địa chỉ cụ thể <span class="text-danger">*</span></label>
                            <input asp-for="AddressDetail" class="form-control" required placeholder="Số nhà, tên đường">
                            <div class="invalid-feedback">Vui lòng nhập địa chỉ cụ thể</div>
                        </div>

                        <div class="form-group">
                            <label asp-for="Notes" class="text-black">Ghi chú</label>
                            <textarea asp-for="Notes" class="form-control"></textarea>
                        </div>

                        <div class="form-group">
                            <label asp-for="PaymentMethod" class="text-black">Phương thức thanh toán <span class="text-danger">*</span></label>
                            <div class="payment-methods">
                                @if (ViewBag.PaymentMethods != null && ViewBag.PaymentMethods.Count > 0)
                                {
                                    foreach (var method in ViewBag.PaymentMethods)
                                    {
                                        string statusClass = method.Status switch
                                        {
                                            PaymentMethodStatus.Active => "",
                                            PaymentMethodStatus.Hidden => "payment-hidden",
                                            PaymentMethodStatus.Maintenance => "payment-maintenance",
                                            _ => ""
                                        };

                                        <div class="payment-method-item mb-3 @statusClass">
                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="d-flex align-items-center">
                                                        <div class="form-check">
                                                            <input class="form-check-input" type="radio"
                                                                   name="PaymentMethod"
                                                                   id="payment_@((int)method.Type)"
                                                                   value="@((int)method.Type)"
                                                            @(method.Status != PaymentMethodStatus.Active ? "disabled" : "")
                                                                   required>
                                                        </div>
                                                        <div class="ms-3">
                                                            <label class="form-check-label d-block" for="payment_@((int)method.Type)">
                                                                <span class="h6 mb-0">@method.Name</span>
                                                                @if (!string.IsNullOrEmpty(method.Description))
                                                                {
                                                                    <small class="text-muted d-block">@method.Description</small>
                                                                }
                                                            </label>
                                                            @if (method.Status == PaymentMethodStatus.Maintenance)
                                                            {
                                                                <div class="alert alert-warning mt-2 mb-0">
                                                                    <i class="fas fa-tools me-2"></i>
                                                                    @(string.IsNullOrEmpty(method.MaintenanceMessage)
                                                                        ? "Phương thức thanh toán đang bảo trì"
                                                                        : method.MaintenanceMessage)
                                                                </div>
                                                            }
                                                        </div>
                                                        @{
                                                            string iconClass = method.Type switch
                                                            {
                                                                PaymentMethodType.COD => "fas fa-money-bill-wave",
                                                                PaymentMethodType.VNPay => "vnpay-icon",
                                                                PaymentMethodType.Momo => "momo-icon",
                                                                PaymentMethodType.ZaloPay => "zalopay-icon",
                                                                PaymentMethodType.Visa => "fab fa-cc-visa",
                                                                _ => "fas fa-credit-card"
                                                            };
                                                        }
                                                        <div class="ms-auto">
                                                            <i class="@iconClass fa-2x"></i>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                }
                                else
                                {
                                    <div class="alert alert-warning">
                                        <i class="fas fa-exclamation-triangle me-2"></i>
                                        Hiện tại không có phương thức thanh toán nào khả dụng
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="row mb-5">
                        <div class="col-md-12">
                            <h2 class="h3 mb-3 text-black">Đơn hàng của bạn</h2>
                            <div class="p-3 p-lg-5 border">
                                <!-- Hiển thị sản phẩm trong giỏ hàng -->
                                @foreach (var item in Model.CartItems)
                                {
                                    <div class="d-flex justify-content-between mb-3">
                                        <span>@item.Product.Name x @item.Quantity (@item.Size.SizeValue)</span>
                                        <span>@((item.Product.Price - item.Product.DiscountPrice).ToString("N0")) ₫</span>
                                    </div>
                                }

                                <div class="border-bottom mb-3"></div>

                                <!-- Thêm phần mã giảm giá -->
                                <div class="mb-3">
                                    <div class="input-group">
                                        <input type="text" id="couponCode" class="form-control" placeholder="Nhập mã giảm giá">
                                        <div class="input-group-append">
                                            <button type="button" id="applyCoupon" class="btn btn-primary">Áp dụng</button>
                                        </div>
                                    </div>
                                    <div id="couponMessage" class="small mt-2"></div>
                                </div>

                                <!-- Hiển thị tổng tiền -->
                                <div class="d-flex justify-content-between mb-3">
                                    <span>Tạm tính:</span>
                                    @if (Model.SubTotal > 0)
                                    {
                                        <span>@Model.SubTotal.ToString("#,##0") đ</span>
                                    }
                                </div>

                                <!-- Phần phí vận chuyển -->
                                <div class="d-flex justify-content-between mb-3">
                                    <span>Phí vận chuyển:</span>
                                    <span id="shippingFee">Vui lòng chọn địa chỉ</span>
                                </div>
                                <div class="shipping-discount-info mb-3">
                                    <small class="text-muted">
                                        <i class="fas fa-info-circle"></i> Chính sách giảm phí vận chuyển:
                                        <ul class="list-unstyled mb-0 pl-3">
                                            <li>- Đơn hàng từ 500,000đ đến 999,999đ: Giảm 10%</li>
                                            <li>- Đơn hàng từ 1,000,000đ trở lên: Giảm 20%</li>
                                        </ul>
                                    </small>
                                </div>

                                <!-- Hiển thị thời gian giao hàng dự kiến -->
                                <div class="mb-3" id="estimatedDeliveryTime" style="display: none;">
                                    <small class="text-muted">
                                        <i class="fas fa-truck me-1"></i>
                                        Thời gian giao hàng dự kiến: <span id="deliveryTime"></span>
                                    </small>
                                </div>

                                @if (Model.MemberRankDiscountPercent > 0)
                                {
                                    <div class="d-flex justify-content-between mb-3 text-success">
                                        <span>Giảm giá thành viên (@Model.MemberRankName - @Model.MemberRankDiscountPercent%):</span>
                                        <span>-@Model.DiscountAmount.ToString("N0") ₫</span>
                                    </div>
                                }

                                <!-- Phần giảm giá từ mã -->
                                <div id="couponDiscount" class="d-flex justify-content-between mb-3" style="display: none;">
                                    <span id="couponLabel">Giảm giá từ mã:</span>
                                    <span id="couponDiscountAmount">-0 ₫</span>
                                </div>

                                <div class="d-flex justify-content-between">
                                    <strong>Tổng tiền:</strong>
                                    <strong class="text-primary h4" id="finalTotal">@Model.FinalTotal.ToString("N0") ₫</strong>
                                </div>

                                @if (Model.MemberRankDiscountPercent > 0)
                                {
                                    <div class="mt-2 text-success small">
                                        <i class="fas fa-info-circle"></i>
                                        Bạn được giảm @Model.MemberRankDiscountPercent% với hạng thành viên @Model.MemberRankName
                                    </div>
                                }

                                <button type="submit" class="btn btn-primary btn-lg py-3 btn-block mt-3">Đặt hàng</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Thêm biến để lưu tên địa chỉ
            let selectedProvinceName = '';
            let selectedDistrictName = '';
            let selectedWardName = '';

            // Load tỉnh/thành phố khi trang được tải
            loadProvinces();

            // Xử lý sự kiện thay đổi tỉnh/thành phố
            $('#province').change(function () {
                var provinceId = $(this).val();
                selectedProvinceName = $(this).find('option:selected').data('name') || '';
                console.log('Province changed:', provinceId, selectedProvinceName);
                
                $('#district').empty().append('<option value="">Chọn Quận/Huyện</option>').prop('disabled', !provinceId);
                $('#ward').empty().append('<option value="">Chọn Phường/Xã</option>').prop('disabled', true);
                resetShippingFee();
                
                // Cập nhật ProvinceCode ngay khi thay đổi
                $('#ProvinceCode').val(provinceId);
                updateFormattedAddress();

                if (provinceId) {
                    loadDistricts(provinceId);
                }
            });

            // Xử lý sự kiện thay đổi quận/huyện
            $('#district').change(function () {
                var districtId = $(this).val();
                selectedDistrictName = $(this).find('option:selected').data('name') || '';
                console.log('District changed:', districtId, selectedDistrictName);
                
                $('#ward').empty().append('<option value="">Chọn Phường/Xã</option>').prop('disabled', !districtId);
                resetShippingFee();
                
                // Cập nhật DistrictCode ngay khi thay đổi
                $('#DistrictCode').val(districtId);
                updateFormattedAddress();

                if (districtId) {
                    loadWards(districtId);
                }
            });

            // Xử lý sự kiện thay đổi phường/xã
            $('#ward').change(function () {
                var wardCode = $(this).val();
                selectedWardName = $(this).find('option:selected').data('name') || '';
                console.log('Ward changed:', wardCode, selectedWardName);
                
                // Cập nhật WardCode ngay khi thay đổi
                $('#WardCode').val(wardCode);
                updateFormattedAddress();
                calculateShippingFee();
            });

            $('#AddressDetail').on('input', function() {
                updateFormattedAddress();
            });

            function loadProvinces() {
                $.ajax({
                    url: '/api/ghn/provinces',
                    method: 'GET',
                    success: function(provinces) {
                        const select = $('#province');
                        select.empty();
                        select.append('<option value="">Chọn Tỉnh/Thành phố</option>');
                        provinces.forEach(function(province) {
                            select.append(`<option value="${province.provinceId}" data-name="${province.provinceName}">${province.provinceName}</option>`);
                        });
                        select.prop('disabled', false);
                    },
                    error: function(xhr, status, error) {
                        console.error('Error loading provinces:', error);
                        alert('Không thể tải danh sách tỉnh/thành phố. Vui lòng thử lại sau.');
                    }
                });
            }

            function loadDistricts(provinceId) {
                if (!provinceId) return;
                
                $.ajax({
                    url: `/api/ghn/districts/${provinceId}`,
                    method: 'GET',
                    success: function(districts) {
                        const select = $('#district');
                        select.empty();
                        select.append('<option value="">Chọn Quận/Huyện</option>');
                        districts.forEach(function(district) {
                            select.append(`<option value="${district.districtId}" data-name="${district.districtName}">${district.districtName}</option>`);
                        });
                        select.prop('disabled', false);
                    },
                    error: function(xhr, status, error) {
                        console.error('Error loading districts:', error);
                        alert('Không thể tải danh sách quận/huyện. Vui lòng thử lại sau.');
                    }
                });
            }

            function loadWards(districtId) {
                if (!districtId) return;
                
                $.ajax({
                    url: `/api/ghn/wards/${districtId}`,
                    method: 'GET',
                    success: function(wards) {
                        const select = $('#ward');
                        select.empty();
                        select.append('<option value="">Chọn Phường/Xã</option>');
                        wards.forEach(function(ward) {
                            select.append(`<option value="${ward.wardCode}" data-name="${ward.wardName}">${ward.wardName}</option>`);
                        });
                        select.prop('disabled', false);
                    },
                    error: function(xhr, status, error) {
                        console.error('Error loading wards:', error);
                        alert('Không thể tải danh sách phường/xã. Vui lòng thử lại sau.');
                    }
                });
            }

            function calculateShippingFee() {
                const wardCode = $('#ward').val();
                const districtId = parseInt($('#district').val());

                if (!wardCode || !districtId) {
                    console.log('Missing required values:', { wardCode, districtId });
                    return;
                }

                // Lưu giá trị vào hidden inputs
                $('#WardCode').val(wardCode);
                $('#DistrictCode').val(districtId);

                $.ajax({
                    url: `/api/ghn/calculate-fee?wardCode=${wardCode}&districtId=${districtId}`,
                    method: 'GET',
                    success: function(response) {
                        if (response.success) {
                            $('#shippingFee').text(formatCurrency(response.shippingFee));
                            updateTotalAmount(response.shippingFee);
                            
                            // Hiển thị thời gian giao hàng dự kiến
                            if (response.expectedDelivery) {
                                $('#estimatedDeliveryTime').show();
                                $('#deliveryTime').text(response.expectedDelivery);
                            } else {
                                $('#estimatedDeliveryTime').hide();
                            }
                        } else {
                            $('#shippingFee').text('Không thể tính phí vận chuyển');
                            $('#estimatedDeliveryTime').hide();
                        }
                    },
                    error: function(xhr, status, error) {
                        $('#shippingFee').text('Không thể tính phí vận chuyển');
                        $('#estimatedDeliveryTime').hide();
                    }
                });
            }

            function resetShippingFee() {
                $('#shippingFee').text('Vui lòng chọn địa chỉ');
                $('#estimatedDeliveryTime').hide();
                updateTotalAmount(0);
            }

            function updateTotalAmount(shippingFee) {
                var subTotal = @Model.SubTotal;
                var discountAmount = @Model.DiscountAmount;
                var couponDiscount = parseFloat($('#couponDiscountAmount').data('value') || 0);
                
                var finalTotal = subTotal - discountAmount - couponDiscount + shippingFee;
                $('#finalTotal').text(formatCurrency(finalTotal));
            }

            function formatCurrency(amount) {
                return new Intl.NumberFormat('vi-VN', {
                    style: 'currency',
                    currency: 'VND'
                }).format(amount);
            }

            // Xử lý mã giảm giá
            $('#applyCoupon').click(function() {
                var couponCode = $('#couponCode').val();
                if (!couponCode) {
                    showCouponMessage('Vui lòng nhập mã giảm giá', 'warning');
                    return;
                }

                $.ajax({
                    url: '/api/coupon/apply',
                    method: 'POST',
                    data: {
                        code: couponCode,
                        subTotal: @Model.SubTotal
                    },
                    success: function(response) {
                        if (response.success) {
                            $('#couponDiscount').show();
                            $('#couponDiscountAmount')
                                .text('-' + formatCurrency(response.discountAmount))
                                .data('value', response.discountAmount);
                            showCouponMessage(response.message, 'success');
                            calculateShippingFee(); // Tính lại tổng tiền
                        } else {
                            showCouponMessage(response.message, 'danger');
                        }
                    },
                    error: function() {
                        showCouponMessage('Có lỗi xảy ra khi áp dụng mã giảm giá', 'danger');
                    }
                });
            });

            function showCouponMessage(message, type) {
                $('#couponMessage')
                    .removeClass()
                    .addClass(`small text-${type} mt-2`)
                    .text(message);
            }

            function updateShippingInfo() {
                const provinceId = $('#ProvinceId').val();
                const districtId = $('#DistrictId').val();
                const wardCode = $('#WardCode').val();

                if (!provinceId || !districtId || !wardCode) {
                    return;
                }

                $.ajax({
                    url: '/api/ghn/shipping-fee',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        provinceId: provinceId,
                        districtId: districtId,
                        wardCode: wardCode
                    }),
                    success: function (response) {
                        if (response.success) {
                            $('#shippingFee').text(formatCurrency(response.total));
                            updateTotalAmount();
                        } else {
                            console.error('Lỗi tính phí vận chuyển:', response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Lỗi khi gọi API tính phí vận chuyển:', error);
                    }
                });

                // Tính thời gian giao hàng dự kiến
                $.ajax({
                    url: '/api/ghn/leadtime',
                    method: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        districtId: districtId,
                        wardCode: wardCode
                    }),
                    success: function (response) {
                        if (response.success) {
                            $('#expectedDelivery').text('Ngày giao dự kiến: ' + response.expectedDelivery);
                        } else {
                            console.error('Lỗi tính thời gian giao hàng:', response.message);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Lỗi khi gọi API tính thời gian giao hàng:', error);
                    }
                });
            }

            function updateFormattedAddress() {
                var addressDetail = $('#AddressDetail').val();
                var formattedAddress = [
                    addressDetail,
                    selectedWardName,
                    selectedDistrictName,
                    selectedProvinceName
                ].filter(Boolean).join(', ');

                // Lưu thông tin địa chỉ GHN
                $('#FormattedAddress').val(formattedAddress);
                $('#WardCode').val($('#ward').val());
                $('#DistrictCode').val($('#district').val());
                $('#ProvinceCode').val($('#province').val());

                // Hiển thị địa chỉ đầy đủ
                $('#fullAddress').text(formattedAddress || 'Vui lòng nhập đầy đủ thông tin địa chỉ');
            }

            // Thêm validation form
            $('form').on('submit', function(e) {
                // Lấy giá trị hiện tại từ các select
                const provinceCode = $('#province').val();
                const districtCode = $('#district').val();
                const wardCode = $('#ward').val();
                const addressDetail = $('#AddressDetail').val().trim();

                console.log('Form submission - Address codes:', {
                    provinceCode,
                    districtCode,
                    wardCode,
                    addressDetail
                });

                if (!provinceCode || !districtCode || !wardCode || !addressDetail) {
                    e.preventDefault();
                    alert('Vui lòng nhập đầy đủ thông tin địa chỉ');
                    return false;
                }

                // Cập nhật lại các hidden inputs trước khi submit
                $('#ProvinceCode').val(provinceCode);
                $('#DistrictCode').val(districtCode);
                $('#WardCode').val(wardCode);

                // Cập nhật địa chỉ đầy đủ
                updateFormattedAddress();

                // Log để kiểm tra giá trị cuối cùng
                console.log('Final form values:', {
                    provinceCode: $('#ProvinceCode').val(),
                    districtCode: $('#DistrictCode').val(),
                    wardCode: $('#WardCode').val(),
                    formattedAddress: $('#FormattedAddress').val()
                });

                return true;
            });

            $(document).ready(function() {
                loadProvinces();
            });
        });
    </script>
}

<style>
    .payment-method-item .card {
        transition: all 0.3s ease;
        border: 1px solid #dee2e6;
    }

        .payment-method-item .card:hover {
            border-color: #007bff;
            box-shadow: 0 0 10px rgba(0,123,255,0.1);
        }

    .payment-method-item.payment-maintenance .card {
        background-color: #fff9e6;
        border-color: #ffeeba;
    }

    .payment-method-item.payment-hidden {
        display: none;
    }

    .payment-method-item input[type="radio"]:checked + label {
        font-weight: bold;
    }

    .payment-method-item input[type="radio"]:disabled + label {
        opacity: 0.6;
        cursor: not-allowed;
    }

    /* Icons */
    .vnpay-icon {
        color: #0066FF;
    }

    .momo-icon {
        color: #A50064;
    }

    .zalopay-icon {
        color: #0068FF;
    }

    .payment-method-item .alert {
        font-size: 0.875rem;
        padding: 0.5rem 1rem;
    }

    .payment-method-item .card-body {
        padding: 1rem;
    }

    .payment-method-item .form-check-input {
        margin-top: 0.3rem;
    }
</style>

<!-- Hidden inputs for GHN address -->
<input type="hidden" name="FormattedAddress" id="FormattedAddress" />
<input type="hidden" name="WardCode" id="WardCode" />
<input type="hidden" name="DistrictCode" id="DistrictCode" />
<input type="hidden" name="ProvinceCode" id="ProvinceCode" />