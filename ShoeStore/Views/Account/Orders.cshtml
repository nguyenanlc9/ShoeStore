@model IEnumerable<ShoeStore.Models.Order>
@using ShoeStore.Models.Enums

<style>
    /* Đảm bảo modal hiển thị trên navbar */
    .modal-backdrop {
        z-index: 9998 !important;
    }
    
    .modal {
        z-index: 9999 !important;
    }

    /* Style cho modal content */
    .modal-dialog {
        margin: 1.75rem auto;
        position: relative;
        pointer-events: auto;
    }

    /* Đảm bảo modal scrollable khi nội dung dài */
    .modal-body {
        max-height: calc(100vh - 210px);
        overflow-y: auto;
    }

    /* Fix position cho modal */
    .modal.show {
        display: block;
        padding-right: 17px;
        background-color: rgba(0, 0, 0, 0.5);
    }

    /* Đảm bảo modal content không bị đè */
    .modal-content {
        position: relative;
        background-color: #fff;
        border-radius: 0.3rem;
        box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    }
</style>

<div class="container my-5">
    <h2 class="mb-4">Lịch sử đơn hàng</h2>

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            Bạn chưa có đơn hàng nào.
        </div>
    }
    else
    {
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Mã đơn hàng</th>
                        <th>Ngày đặt</th>
                        <th>Tổng tiền</th>
                        <th>Trạng thái đơn hàng</th>
                        <th>Trạng thái thanh toán</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr>
                            <td>@order.OrderCode</td>
                            <td>@order.CreatedAt.ToString("dd/MM/yyyy HH:mm")</td>
                            <td>@order.TotalAmount.ToString("N0") đ</td>
                            <td>
                                @{
                                    var statusClass = order.Status switch
                                    {
                                        OrderStatus.Pending => "secondary",
                                        OrderStatus.Processing => "info",
                                        OrderStatus.Shipped => "primary", 
                                        OrderStatus.Delivered => "success",
                                        OrderStatus.Completed => "success",
                                        OrderStatus.Cancelled => "danger",
                                        _ => "secondary"
                                    };

                                    var statusText = order.Status switch 
                                    {
                                        OrderStatus.Pending => "Chờ xử lý",
                                        OrderStatus.Processing => "Đang xử lý",
                                        OrderStatus.Shipped => "Đã giao cho vận chuyển",
                                        OrderStatus.Delivered => "Đã giao hàng",
                                        OrderStatus.Completed => "Hoàn thành",
                                        OrderStatus.Cancelled => "Đã hủy",
                                        _ => "Không xác định"
                                    };
                                }
                                <span class="badge bg-@statusClass">@statusText</span>
                            </td>
                            <td>
                                @{
                                    var paymentClass = order.PaymentStatus switch
                                    {
                                        PaymentStatus.Pending => "warning",
                                        PaymentStatus.Completed => "success",
                                        PaymentStatus.Failed => "danger",
                                        _ => "secondary"
                                    };
                                }
                                <span class="badge bg-@paymentClass">
                                    @(order.PaymentStatus switch
                                    {
                                        PaymentStatus.Pending => "Chờ thanh toán",
                                        PaymentStatus.Completed => "Đã thanh toán",
                                        PaymentStatus.Failed => "Thất bại",
                                        _ => "Không xác định"
                                    })
                                </span>
                            </td>
                            <td>
                                <div class="btn-group">
                                    <button type="button" class="btn btn-info btn-sm" onclick="showOrderDetails('@order.OrderId')">
                                        Chi tiết
                                    </button>
                                    @if ((DateTime.Now - order.OrderDate).TotalDays <= 7 && order.Status == OrderStatus.Completed)
                                    {
                                        <a href="@Url.Action("Create", "Return", new { orderId = order.OrderId })" class="btn btn-warning btn-sm">
                                            Yêu cầu đổi trả
                                        </a>
                                    }
                                    @if (order.Status == OrderStatus.Delivered)
                                    {
                                        <button type="button" class="btn btn-sm btn-success" 
                                                onclick="confirmOrder('@order.OrderId')">
                                            Xác nhận đã nhận
                                        </button>
                                    }
                                    @if (order.Status == OrderStatus.Pending)
                                    {
                                        <button type="button" class="btn btn-sm btn-danger" 
                                                onclick="cancelOrder('@order.OrderId')">
                                            Hủy đơn
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

<!-- Modal Chi tiết đơn hàng -->
<div class="modal fade" id="orderDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết đơn hàng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="orderDetailsContent">
                <!-- Nội dung chi tiết đơn hàng sẽ được load động -->
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function showOrderDetails(orderId) {
            // Thêm loading indicator
            $('#orderDetailsContent').html('<div class="text-center"><div class="spinner-border" role="status"></div></div>');
            
            // Hiển thị modal
            $('#orderDetailsModal').modal('show');

            // Log để debug
            console.log('OrderId:', orderId);

            // Load nội dung
            $.get('/Order/OrderDetails/' + orderId)
                .done(function(response) {
                    console.log('Response:', response); // Log response để debug
                    $('#orderDetailsContent').html(response);
                })
                .fail(function(jqXHR, textStatus, errorThrown) {
                    console.error('Error details:', {
                        status: jqXHR.status,
                        statusText: jqXHR.statusText,
                        responseText: jqXHR.responseText
                    });
                    $('#orderDetailsContent').html(`
                        <div class="alert alert-danger">
                            Có lỗi xảy ra khi tải thông tin đơn hàng. 
                            Vui lòng thử lại sau. (Status: ${jqXHR.status})
                        </div>
                    `);
                });
        }

        function confirmOrder(orderId) {
            if (confirm('Xác nhận đã nhận được hàng?')) {
                $.post('/Account/ConfirmOrder', { orderId: orderId }, function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                });
            }
        }

        function cancelOrder(orderId) {
            if (confirm('Bạn có chắc muốn hủy đơn hàng này?')) {
                $.post('/Account/CancelOrder', { orderId: orderId }, function(response) {
                    if (response.success) {
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                });
            }
        }
    </script>
} 