@model IEnumerable<ShoeStore.Models.Product>
@{
    ViewData["Title"] = "Shop";
}

<div class="bg-light py-3">
    <div class="container">
        <div class="row">
            <div class="col-md-12 mb-0">
                <a asp-controller="Home" asp-action="Index">Home</a> 
                <span class="mx-2 mb-0">/</span> 
                <strong class="text-black">Shop</strong>
            </div>
        </div>
    </div>
</div>

<div class="site-section">
    <div class="container">
        <div class="row">
            <!-- Sidebar -->
            <div class="col-md-3">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Lọc sản phẩm</h5>
                    </div>
                    <div class="card-body">
                        <form id="filterForm" method="get">
                            <!-- Danh mục -->
                            <div class="mb-4">
                                <h6>Danh mục</h6>
                                <select name="categoryId" class="form-control" onchange="this.form.submit()">
                                    <option value="">Tất cả</option>
                                    @foreach (var category in ViewBag.Categories)
                                    {
                                        <option value="@category.CategoryId" selected="@(ViewBag.SelectedCategoryId == category.CategoryId)">
                                            @category.Name
                                        </option>
                                    }
                                </select>
                            </div>

                            <!-- Thương hiệu -->
                            <div class="mb-4">
                                <h6>Thương hiệu</h6>
                                <select name="brandId" class="form-control" onchange="this.form.submit()">
                                    <option value="">Tất cả</option>
                                    @foreach (var brand in ViewBag.Brands)
                                    {
                                        <option value="@brand.BrandId" selected="@(ViewBag.SelectedBrandId == brand.BrandId)">
                                            @brand.Name
                                        </option>
                                    }
                                </select>
                            </div>

                            <!-- Khoảng giá -->
                            <div class="mb-4">
                                <h6>Khoảng giá</h6>
                                <div class="form-group">
                                    <input type="number" name="minPrice" class="form-control mb-2" 
                                           placeholder="Giá từ" value="@ViewBag.MinPrice">
                                    <input type="number" name="maxPrice" class="form-control" 
                                           placeholder="Giá đến" value="@ViewBag.MaxPrice">
                                </div>
                                <button type="submit" class="btn btn-primary btn-sm mt-2">Áp dụng</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>

            <!-- Product List -->
            <div class="col-md-9">
                <!-- Sort Options -->
                <div class="row mb-4">
                    <div class="col-md-12">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span>Hiển thị @Model.Count() sản phẩm</span>
                            </div>
                            <div>
                                <select id="sortOrder" class="form-control" onchange="updateSort(this.value)">
                                    <option value="">Sắp xếp theo</option>
                                    <option value="price_asc" selected="@(ViewBag.CurrentSort == "price_asc")">
                                        Giá tăng dần
                                    </option>
                                    <option value="price_desc" selected="@(ViewBag.CurrentSort == "price_desc")">
                                        Giá giảm dần
                                    </option>
                                    <option value="name_asc" selected="@(ViewBag.CurrentSort == "name_asc")">
                                        Tên A-Z
                                    </option>
                                    <option value="name_desc" selected="@(ViewBag.CurrentSort == "name_desc")">
                                        Tên Z-A
                                    </option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Products Grid -->
                <div class="row">
                    @foreach (var product in Model)
                    {
                        <div class="col-lg-4 col-md-6 mb-4">
                            <div class="product-card h-100">
                                <div class="product-image">
                                    <a href="@Url.Action("Detail", "Shop", new { id = product.ProductId })">
                                        @if (!string.IsNullOrEmpty(product.ImagePath))
                                        {
                                            <img src="@product.ImagePath" alt="@product.Name" class="img-fluid">
                                        }
                                        else
                                        {
                                            <img src="/images/no-image.png" alt="No Image" class="img-fluid">
                                        }
                                    </a>
                                    <div class="product-badges">
                                        @if (product.IsNew)
                                        {
                                            <span class="badge badge-success">New</span>
                                        }
                                        @if (product.IsHot)
                                        {
                                            <span class="badge badge-warning">Hot</span>
                                        }
                                        @if (product.DiscountPrice > 0)
                                        {
                                            var discountPercent = Math.Round((decimal)(product.DiscountPrice / product.Price * 100));
                                            <span class="badge badge-danger">-@discountPercent%</span>
                                        }
                                        @{
                                            var totalStock = product.ProductSizeStocks?.Sum(s => s.StockQuantity) ?? 0;
                                        }
                                        @if (totalStock == 0)
                                        {
                                            <span class="badge badge-danger">Sold Out</span>
                                        }
                                    </div>
                                </div>
                                <div class="product-info p-3">
                                    <div class="d-flex justify-content-between align-items-start mb-2">
                                        <h5 class="product-name mb-0">
                                            <a href="@Url.Action("Detail", "Shop", new { id = product.ProductId })" class="text-dark text-decoration-none">
                                                @product.Name
                                            </a>
                                        </h5>
                                    </div>
                                    <div class="rating product-rating" data-rating="@product.Rating">
                                        @for (int i = 1; i <= 5; i++)
                                        {
                                            <i class="fa fa-star"></i>
                                        }
                                        <span class="rating-count">(@product.ReviewCount đánh giá)</span>
                                    </div>
                                    <div class="product-brand text-muted mb-2">
                                        @product.Brands?.Name
                                    </div>
                                    <div class="product-price">
                                        @if (product.DiscountPrice > 0)
                                        {
                                            var finalPrice = product.Price - product.DiscountPrice;
                                            <del class="text-muted mr-2">@String.Format("{0:N0}đ", product.Price)</del>
                                            <span class="text-danger">@String.Format("{0:N0}đ", finalPrice)</span>
                                        }
                                        else
                                        {
                                            <span class="text-primary">@String.Format("{0:N0}đ", product.Price)</span>
                                        }
                                    </div>
                                    @if (product.Status == ProductStatus.OutOfStock)
                                    {
                                        <div class="status-label out-of-stock mt-2">Hết hàng</div>
                                    }
                                    else if (product.Status == ProductStatus.Discontinued)
                                    {
                                        <div class="status-label discontinued mt-2">Ngừng kinh doanh</div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function updateSort(value) {
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('sortOrder', value);
            window.location.search = urlParams.toString();
        }

        $(document).ready(function() {
            // Hiển thị số sao đánh giá
            $('.product-rating').each(function() {
                var rating = $(this).data('rating');
                var $stars = $(this).find('.fa-star');
                
                $stars.each(function(index) {
                    if (index < rating) {
                        $(this).addClass('checked');
                    }
                });
            });
        });
    </script>
}

<style>
    .product-card {
        display: block;
        padding: 0;
        max-width: none;
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        border: 1px solid #eee;
        border-radius: 8px;
        overflow: hidden;
        background-color: #fff;
        height: 100%;
    }

    .product-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    }

    .product-image {
        position: relative;
        padding-top: 100%; /* Tạo hình vuông */
        overflow: hidden;
    }

    .product-image img {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .product-card:hover .product-image img {
        transform: scale(1.05);
    }

    .product-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        padding: 5px 10px;
        border-radius: 4px;
        color: white;
        font-size: 12px;
        font-weight: bold;
        z-index: 1;
    }

    .product-badge.sale {
        background-color: #dc3545;
    }

    .product-badge.new {
        background-color: #28a745;
    }

    .product-badge.hot {
        background-color: #ffc107;
        color: #000;
    }

    .product-info {
        padding: 15px;
        text-align: left;
    }

    .product-name {
        font-size: 16px;
        font-weight: 500;
        margin-bottom: 8px;
        line-height: 1.4;
        height: 44px;
        overflow: hidden;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
    }

    .product-name a {
        color: #333;
        text-decoration: none;
    }

    .product-name a:hover {
        color: #007bff;
    }

    .product-brand {
        font-size: 14px;
        color: #666;
        margin-bottom: 8px;
    }

    .product-price {
        font-size: 16px;
        font-weight: 600;
        color: #007bff;
    }

    .product-price del {
        font-size: 14px;
        font-weight: normal;
        color: #999;
        margin-right: 8px;
    }

    .status-label {
        display: inline-block;
        padding: 4px 8px;
        border-radius: 4px;
        font-size: 12px;
        font-weight: 500;
    }

    .status-label.out-of-stock {
        background-color: #dc3545;
        color: white;
    }

    .status-label.discontinued {
        background-color: #6c757d;
        color: white;
    }

    .badges {
        display: flex;
        flex-wrap: wrap;
        gap: 4px;
        align-items: center;
    }

    .badges .badge {
        font-size: 10px;
        padding: 4px 8px;
        margin: 0;
    }

    .badge-success {
        background-color: #28a745;
    }

    .badge-warning {
        background-color: #ffc107;
        color: #000;
    }

    .badge-danger {
        background-color: #dc3545;
    }

    .product-badges {
        position: absolute;
        top: 10px;
        left: 10px;
        right: 10px;
        display: flex;
        flex-wrap: wrap;
        gap: 4px;
        z-index: 2;
    }

    .product-badges .badge {
        font-size: 11px;
        padding: 5px 10px;
        border-radius: 4px;
        font-weight: 500;
    }

    .badge-success {
        background-color: #28a745;
    }

    .badge-warning {
        background-color: #ffc107;
        color: #000;
    }

    .badge-danger {
        background-color: #dc3545;
        color: white;
    }

    .rating {
        display: flex;
        align-items: center;
        margin-bottom: 10px;
    }

    .rating .fa-star {
        color: #ddd;
        margin-right: 2px;
    }

    .rating .fa-star.checked {
        color: #ffc107;
    }

    .rating-count {
        margin-left: 5px;
        color: #666;
        font-size: 0.9em;
    }
</style>