@model IEnumerable<ShoeStore.Models.Product>
@{
    ViewData["Title"] = "Shop Page";
}
<div class="bg-light py-3">
    <div class="container">
        <div class="row">
            <div class="col-md-12 mb-0"><a href="index.html">Home</a> <span class="mx-2 mb-0">/</span> <strong class="text-black">Shop</strong></div>
        </div>
    </div>
</div>

<div class="site-section">
    <div class="container">

        <div class="row mb-5">
            <div class="col-md-9 order-2">

                <div class="row">
                    <div class="col-md-12 mb-5">
                        <div class="float-md-left mb-4">
                            <h2 class="text-black h5">Shop All</h2>
                        </div>
                        <div class="d-flex">
                            <div class="dropdown mr-1 ml-md-auto">
                                <button type="button" class="btn btn-secondary btn-sm dropdown-toggle" id="dropdownBrand" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    @(ViewBag.SelectedBrand?.Name ?? "Thương hiệu")
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownBrand">
                                    <a class="dropdown-item @(ViewBag.SelectedBrandId == null ? "active" : "")" 
                                       href="@Url.Action("Index", "Shop", new { minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice })">
                                        Tất cả
                                    </a>
                                    @foreach (var brand in ViewBag.Brands)
                                    {
                                        <a class="dropdown-item @(ViewBag.SelectedBrandId == brand.BrandId ? "active" : "")" 
                                           href="@Url.Action("Index", "Shop", new { brandId = brand.BrandId, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice })">
                                            @brand.Name
                                        </a>
                                    }
                                </div>
                            </div>
                            <div class="btn-group">
<<<<<<< Updated upstream
                                <button type="button" class="btn btn-secondary btn-sm dropdown-toggle" id="dropdownMenuReference" data-toggle="dropdown">Sắp xếp</button>
                                <div class="dropdown-menu" aria-labelledby="dropdownMenuReference">
                                    <a class="dropdown-item" asp-controller="Shop" asp-action="Index" asp-route-sort="name-asc">Tên, A đến Z</a>
                                    <a class="dropdown-item" asp-controller="Shop" asp-action="Index" asp-route-sort="name-desc">Tên, Z đến A</a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item" asp-controller="Shop" asp-action="Index" asp-route-sort="price-asc">Giá, thấp đến cao</a>
                                    <a class="dropdown-item" asp-controller="Shop" asp-action="Index" asp-route-sort="price-desc">Giá, cao đến thấp</a>
=======
                                <button type="button" class="btn btn-secondary btn-sm dropdown-toggle" id="dropdownSort" data-toggle="dropdown">
                                    @(ViewBag.SortLabel ?? "Sắp xếp")
                                </button>
                                <div class="dropdown-menu" aria-labelledby="dropdownSort">
                                    <a class="dropdown-item @(ViewBag.SortBy == null ? "active" : "")" 
                                       href="@Url.Action("Index", "Shop", new { brandId = ViewBag.SelectedBrandId, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice })">
                                        Mặc định
                                    </a>
                                    <a class="dropdown-item @(ViewBag.SortBy == "name_asc" ? "active" : "")" 
                                       href="@Url.Action("Index", "Shop", new { brandId = ViewBag.SelectedBrandId, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, sortBy = "name_asc" })">
                                        Tên A-Z
                                    </a>
                                    <a class="dropdown-item @(ViewBag.SortBy == "name_desc" ? "active" : "")" 
                                       href="@Url.Action("Index", "Shop", new { brandId = ViewBag.SelectedBrandId, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, sortBy = "name_desc" })">
                                        Tên Z-A
                                    </a>
                                    <div class="dropdown-divider"></div>
                                    <a class="dropdown-item @(ViewBag.SortBy == "price_asc" ? "active" : "")" 
                                       href="@Url.Action("Index", "Shop", new { brandId = ViewBag.SelectedBrandId, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, sortBy = "price_asc" })">
                                        Giá thấp đến cao
                                    </a>
                                    <a class="dropdown-item @(ViewBag.SortBy == "price_desc" ? "active" : "")" 
                                       href="@Url.Action("Index", "Shop", new { brandId = ViewBag.SelectedBrandId, minPrice = ViewBag.MinPrice, maxPrice = ViewBag.MaxPrice, sortBy = "price_desc" })">
                                        Giá cao đến thấp
                                    </a>
>>>>>>> Stashed changes
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row mb-5">
                    @foreach (var product in Model)
                    {
                        <div class="col-sm-6 col-lg-4 mb-4" data-aos="fade-up">
                            <div class="block-4 text-center border">
                                <figure class="block-4-image">
                                    @if (product.DiscountPrice > 0)
                                    {
                                        <div class="product-label-group">
                                            <div class="product-label">
                                                <span>-@Math.Round((product.DiscountPrice / product.Price) * 100, 0)%</span>
                                            </div>
                                        </div>
                                    }
                                    <a asp-controller="Shop" asp-action="Detail" asp-route-id="@product.ProductId">
                                        <img src="@product.ImagePath" alt="@product.Name" class="img-fluid">
                                    </a>
                                </figure>
                                <div class="block-4-text p-4">
                                    <h3><a asp-controller="Shop" asp-action="Detail" asp-route-id="@product.ProductId">@product.Name</a></h3>
                                    
                                    <!-- Rating Stars -->
                                    <div class="product-rating mb-2">
                                        <div class="rating-wrapper">
                                            <div class="stars">
                                                @for (int i = 1; i <= 5; i++)
                                                {
                                                    if (i <= product.Rating)
                                                    {
                                                        <i class="fas fa-star"></i>
                                                    }
                                                    else
                                                    {
                                                        <i class="far fa-star"></i>
                                                    }
                                                }
                                            </div>
                                            <span class="review-count">(@product.ReviewCount)</span>
                                        </div>
                                    </div>

                                    <!-- Price & Status -->
                                    @switch (product.Status)
                                    {
                                        case ProductStatus.Available:
                                            @if (product.DiscountPrice > 0)
                                            {
                                                <div class="price-wrapper">
                                                    <span class="text-primary font-weight-bold">@String.Format("{0:N0}đ", product.Price - product.DiscountPrice)</span>
                                                    <del class="old-price">@String.Format("{0:N0}đ", product.Price)</del>
                                                </div>
                                            }
                                            else
                                            {
                                                <p class="text-primary font-weight-bold">@String.Format("{0:N0}đ", product.Price)</p>
                                            }
                                            break;

                                        case ProductStatus.OutOfStock:
                                            <div class="status-label out-of-stock">Hết hàng</div>
                                            break;

                                        case ProductStatus.Discontinued:
                                            <div class="status-label discontinued">Ngừng kinh doanh</div>
                                            break;
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="row" data-aos="fade-up">
                    <div class="col-md-12 text-center">
                        <div class="site-block-27">
                            <ul>
                                <li><a href="#">&lt;</a></li>
                                <li class="active"><span>1</span></li>
                                <li><a href="#">2</a></li>
                                <li><a href="#">3</a></li>
                                <li><a href="#">4</a></li>
                                <li><a href="#">5</a></li>
                                <li><a href="#">&gt;</a></li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-3 order-1 mb-5 mb-md-0">
                <div class="border p-4 rounded mb-4">
                    <h3 class="mb-3 h6 text-uppercase text-black d-block">Categories</h3>
                    <ul class="list-unstyled mb-0">
                        <li class="mb-1">
                            <a asp-controller="Shop" asp-action="Index" 
                               class="d-flex @(ViewBag.SelectedCategoryId == null ? "text-primary" : "")">
                                <span>All Categories</span>
                                <span class="text-black ml-auto">(@Model.Count())</span>
                            </a>
                        </li>
                        @foreach (var category in ViewBag.Categories)
                        {
                            <li class="mb-1">
                                <a asp-controller="Shop" asp-action="Index" 
                                   asp-route-categoryId="@category.CategoryId"
                                   asp-route-brandId="@ViewBag.SelectedBrandId"
                                   asp-route-minPrice="@ViewBag.MinPrice"
                                   asp-route-maxPrice="@ViewBag.MaxPrice"
                                   asp-route-sortBy="@ViewBag.SortBy"
                                   class="d-flex @(ViewBag.SelectedCategoryId == category.CategoryId ? "text-primary" : "")">
                                    <span>@category.Name</span>
                                    <span class="text-black ml-auto">(@category.ProductCount)</span>
                                </a>
                            </li>
                        }
                    </ul>
                </div>

                <div class="border p-4 rounded mb-4">
                    <!-- Filter by Price -->
                    <div class="mb-4">
                        <h3 class="mb-3 h6 text-uppercase text-black d-block">Lọc theo giá</h3>
                        <div id="slider-range" class="border-primary"></div>
<<<<<<< Updated upstream
                        <div class="d-flex align-items-center mt-2">
                            <input type="text" id="amount" class="form-control border-0 pl-0 bg-white" readonly />
=======
                        <div class="mt-2">
                            <span class="price-display">
                                Giá: <span id="amount">0đ - 10.000.000đ</span>
                            </span>
>>>>>>> Stashed changes
                        </div>
                    </div>
                </div>
            </div>
        </div>

       

                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    
    <script>
        $(document).ready(function() {
            // Lấy giá trị từ ViewBag hoặc dùng giá trị mặc định
            var initialMinPrice = @(ViewBag.MinPrice ?? 0);
            var initialMaxPrice = @(ViewBag.MaxPrice ?? 10000000);

            $("#slider-range").slider({
                range: true,
                min: 0,
                max: 10000000,
                step: 100000,
                values: [initialMinPrice, initialMaxPrice],  // Dùng giá trị từ ViewBag
                slide: function(event, ui) {
                    $("#amount").text(formatPrice(ui.values[0]) + " - " + formatPrice(ui.values[1]));
                },
                stop: function(event, ui) {
                    filterProducts(ui.values[0], ui.values[1]);
                }
            });

            // Hiển thị giá trị ban đầu
            $("#amount").text(
                formatPrice(initialMinPrice) + " - " + formatPrice(initialMaxPrice)
            );

            function formatPrice(price) {
                return new Intl.NumberFormat('vi-VN', { 
                    style: 'currency', 
                    currency: 'VND' 
                }).format(price);
            }

            function filterProducts(minPrice, maxPrice) {
                var url = new URL(window.location.href);
                var params = new URLSearchParams(url.search);

                // Cập nhật hoặc thêm mới các tham số
                params.set('minPrice', minPrice);
                params.set('maxPrice', maxPrice);

                // Giữ lại categoryId nếu có
                if ('@ViewBag.SelectedCategoryId' !== '') {
                    params.set('categoryId', '@ViewBag.SelectedCategoryId');
                }

                // Chuyển hướng với các tham số mới
                window.location.href = '@Url.Action("Index", "Shop")' + '?' + params.toString();
            }
        });
    </script>
}

<style>
    .ui-slider-horizontal {
        height: 4px;
        background: #e9ecef;
        border: none;
        margin: 10px 0;
    }

    .ui-slider .ui-slider-handle {
        width: 16px;
        height: 16px;
        border-radius: 50%;
        border: none;
        background: #7971ea;
        top: -6px;
    }

    .ui-slider .ui-slider-range {
        background: #7971ea;
    }

    .price-display {
        font-size: 14px;
        color: #333;
    }
</style>