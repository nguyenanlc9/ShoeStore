@model ShoeStore.Models.Product

<div class="product-card h-100">
    <div class="product-image position-relative">
        <a href="@Url.Action("Detail", "Shop", new { id = Model.ProductId })">
            @{
                var mainImage = Model.ProductImages?.FirstOrDefault()?.ImagePath ?? Model.ImagePath ?? "/images/no-image.png";
            }
            <img src="@mainImage" alt="@Model.Name" class="img-fluid">
            @if (Model.Status == ProductStatus.OutOfStock)
            {
                <div class="product-status out-of-stock">Hết hàng</div>
            }
            else if (Model.Status == ProductStatus.Discontinued)
            {
                <div class="product-status discontinued">Ngừng kinh doanh</div>
            }
            @if (Model.IsNew)
            {
                <span class="badge badge-success position-absolute" style="top: 10px; left: 10px;">New</span>
            }
            @if (Model.IsHot)
            {
                <span class="badge badge-danger position-absolute" style="top: 10px; right: 10px;">Hot</span>
            }
        </a>
    </div>
    <div class="product-info p-3">
        <h5 class="product-name">
            <a href="@Url.Action("Detail", "Shop", new { id = Model.ProductId })" class="text-dark text-decoration-none">
                @Model.Name
            </a>
        </h5>
        <div class="rating product-rating" data-rating="@Model.Rating">
            @for (int i = 1; i <= 5; i++)
            {
                <i class="fa fa-star"></i>
            }
            <span class="rating-count">(@Model.ReviewCount đánh giá)</span>
        </div>
        <div class="product-brand text-muted mb-2">
            @Model.Brands?.Name
        </div>
        <div class="product-price">
            @if (Model.DiscountPrice > 0)
            {
                var finalPrice = Model.Price - Model.DiscountPrice;
                <del class="text-muted mr-2">@String.Format("{0:N0}đ", Model.Price)</del>
                <span class="text-primary">@String.Format("{0:N0}đ", finalPrice)</span>
            }
            else
            {
                <span class="text-primary">@String.Format("{0:N0}đ", Model.Price)</span>
            }
        </div>
    </div>
</div>

<style>
.product-card {
    border: 1px solid #ddd;
    border-radius: 8px;
    overflow: hidden;
    transition: all 0.3s ease;
}

.product-card:hover {
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
    transform: translateY(-5px);
}

.product-image {
    height: 200px;
    overflow: hidden;
}

.product-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
}

.product-status {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(0,0,0,0.7);
    color: white;
    padding: 5px 10px;
    border-radius: 4px;
}

.product-name {
    font-size: 1rem;
    margin-bottom: 0.5rem;
    height: 2.4rem;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.product-brand {
    font-size: 0.9rem;
}

.product-price {
    font-weight: bold;
}

.badge {
    z-index: 1;
}

.rating {
    display: flex;
    align-items: center;
    margin: 8px 0;
}

.rating .fa-star {
    color: #ddd;
    font-size: 14px;
    margin-right: 2px;
}

.rating .fa-star.checked {
    color: #ffc107;
}

.rating-count {
    margin-left: 5px;
    color: #666;
    font-size: 0.85em;
}
</style> 