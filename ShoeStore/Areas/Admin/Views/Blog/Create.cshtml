@model ShoeStore.Models.Blog

@{
    ViewData["Title"] = "Tạo mới Blog";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h1 class="mt-4">Tạo mới Blog</h1>
    <div class="card mb-4">
        <div class="card-header">
            <a asp-action="Index" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Quay lại
            </a>
        </div>
        <div class="card-body">
            <form asp-action="Create" enctype="multipart/form-data">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Content" class="control-label"></label>
                    <textarea asp-for="Content" id="editor"></textarea>
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="Author" class="control-label"></label>
                    <input asp-for="Author" class="form-control" />
                    <span asp-validation-for="Author" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="ThumbnailImage" class="control-label"></label>
                    <input type="file" name="thumbnailImage" class="form-control" accept="image/*" />
                </div>

                <div class="form-group form-check">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsVisible" /> @Html.DisplayNameFor(model => model.IsVisible)
                    </label>
                </div>

                <div class="form-group">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Lưu
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://cdn.ckeditor.com/ckeditor5/40.1.0/classic/ckeditor.js"></script>
    <script>
        class MyUploadAdapter {
            constructor(loader) {
                this.loader = loader;
            }

            upload() {
                return this.loader.file
                    .then(file => new Promise((resolve, reject) => {
                        this._uploadFile(file).then(response => {
                            resolve({ default: response.url });
                        })
                        .catch(error => {
                            reject(error);
                        });
                    }));
            }

            _uploadFile(file) {
                const data = new FormData();
                data.append('upload', file);

                return fetch('/Admin/Blog/UploadImage', {
                    method: 'POST',
                    body: data
                })
                .then(response => response.json());
            }

            abort() {
                // Abort upload implementation
            }
        }

        function MyCustomUploadAdapterPlugin(editor) {
            editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {
                return new MyUploadAdapter(loader);
            };
        }

        ClassicEditor
            .create(document.querySelector('#editor'), {
                extraPlugins: [MyCustomUploadAdapterPlugin],
                toolbar: ['heading', '|', 
                    'bold', 'italic', '|',
                    'link', 'uploadImage', 'insertTable', '|',
                    'bulletedList', 'numberedList', '|',
                    'outdent', 'indent', '|',
                    'undo', 'redo'],
                image: {
                    toolbar: [
                        'imageStyle:inline',
                        'imageStyle:block',
                        'imageStyle:side',
                        '|',
                        'toggleImageCaption',
                        'imageTextAlternative'
                    ]
                }
            })
            .catch(error => {
                console.error(error);
            });
    </script>
} 