@model ShoeStore.Models.Order
@using ShoeStore.Models.Enums
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "Xử lý đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h1 class="h3 mb-4 text-gray-800">Xử lý đơn hàng #@Model.OrderCode</h1>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
    }

    <div class="row">
        <!-- Thông tin đơn hàng -->
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Thông tin đơn hàng</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <tr>
                                <th>Mã đơn hàng:</th>
                                <td>@Model.OrderCode</td>
                            </tr>
                            <tr>
                                <th>Khách hàng:</th>
                                <td>@Model.OrderUsName</td>
                            </tr>
                            <tr>
                                <th>Số điện thoại:</th>
                                <td>@Model.PhoneNumber</td>
                            </tr>
                            <tr>
                                <th>Địa chỉ:</th>
                                <td>@Model.ShippingAddress</td>
                            </tr>
                            <tr>
                                <th>Phương thức thanh toán:</th>
                                <td>@Model.PaymentMethod.ToString()</td>
                            </tr>
                            <tr>
                                <th>Trạng thái thanh toán:</th>
                                <td>@Model.PaymentStatus.ToString()</td>
                            </tr>
                            <tr>
                                <th>Tổng tiền:</th>
                                <td>@Model.TotalAmount.ToString("N0") VNĐ</td>
                            </tr>
                            @if (!string.IsNullOrEmpty(Model.ShippingOrderCode))
                            {
                                <tr>
                                    <th>Mã vận đơn:</th>
                                    <td>
                                        <span class="badge badge-success">@Model.ShippingOrderCode</span>
                                        <div class="mt-2">
                                            <div class="btn-group">
                                                <button onclick="printOrder('A5')" class="btn btn-sm btn-primary">
                                                    <i class="fas fa-print"></i> A5
                                                </button>
                                                <button onclick="printOrder('80x80')" class="btn btn-sm btn-info">
                                                    <i class="fas fa-print"></i> 80x80
                                                </button>
                                                <button onclick="printOrder('50x72')" class="btn btn-sm btn-secondary">
                                                    <i class="fas fa-print"></i> 50x72
                                                </button>
                                            </div>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- Chi tiết sản phẩm -->
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Chi tiết sản phẩm</h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Sản phẩm</th>
                                    <th>Size</th>
                                    <th>Số lượng</th>
                                    <th>Đơn giá</th>
                                    <th>Thành tiền</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.OrderDetails)
                                {
                                    <tr>
                                        <td>@item.Product.Name</td>
                                        <td>@item.Size.SizeValue</td>
                                        <td>@item.Quantity</td>
                                        <td>@item.Price.ToString("N0") VNĐ</td>
                                        <td>@((item.Price * item.Quantity).ToString("N0")) VNĐ</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Thông tin giao hàng -->
    <div class="row">
        <div class="col-12">
            <div class="card shadow mb-4">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold text-primary">Thông tin giao hàng</h6>
                </div>
                <div class="card-body">
                    @if (string.IsNullOrEmpty(Model.ShippingOrderCode))
                    {
                        <form asp-action="Process" method="post" id="shippingForm">
                            <input type="hidden" name="id" value="@Model.OrderId" />
                            <input type="hidden" name="WardCode" id="WardCode" value="@Model.WardCode" />
                            <input type="hidden" name="DistrictId" id="DistrictId" value="@Model.DistrictId" />

                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Tỉnh/Thành phố</label>
                                        <select class="form-control" id="provinceSelect">
                                            <option value="">Chọn Tỉnh/Thành phố</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Quận/Huyện</label>
                                        <select class="form-control" id="districtSelect" disabled>
                                            <option value="">Chọn Quận/Huyện</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Phường/Xã</label>
                                        <select class="form-control" id="wardSelect" disabled>
                                            <option value="">Chọn Phường/Xã</option>
                                        </select>
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Gói dịch vụ</label>
                                        <select class="form-control" id="serviceSelect" name="ServiceId" disabled>
                                            <option value="">Chọn gói dịch vụ</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Chiều dài (cm)</label>
                                        <input type="number" class="form-control" id="Length" name="Length" value="20">
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Chiều rộng (cm)</label>
                                        <input type="number" class="form-control" id="Width" name="Width" value="20">
                                    </div>
                                </div>
                            </div>

                            <div class="row mb-3">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Chiều cao (cm)</label>
                                        <input type="number" class="form-control" id="Height" name="Height" value="10">
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-12">
                                    <div class="alert alert-info" id="shippingFeeInfo" style="display: none;">
                                        <i class="fas fa-info-circle"></i> Phí vận chuyển ước tính: <strong id="shippingFee">0</strong> VNĐ
                                    </div>
                                </div>
                            </div>

                            <div class="row mt-3">
                                <div class="col-12">
                                    <button type="button" class="btn btn-info mr-2" onclick="calculateShippingFee()">
                                        <i class="fas fa-calculator"></i> Tính phí vận chuyển
                                    </button>

                                    <button type="button" class="btn btn-primary mr-2" onclick="createShippingOrder()">
                                        <i class="fas fa-truck"></i> Tạo đơn vận chuyển GHN
                                    </button>

                                    <button type="button" class="btn btn-secondary" onclick="window.location.href='@Url.Action("Index")'">
                                        <i class="fas fa-arrow-left"></i> Quay lại danh sách
                                    </button>
                                </div>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="alert alert-success">
                            <i class="fas fa-check-circle"></i> Đã tạo vận đơn thành công với mã: <strong>@Model.ShippingOrderCode</strong>
                        </div>
                        
                        <div class="form-group">
                            <label>Cập nhật trạng thái:</label>
                            <select class="form-control" id="orderStatus" style="width: 200px; display: inline-block; margin-left: 10px;">
                                @if (Model.Status == OrderStatus.Shipped || Model.Status == OrderStatus.Shipping)
                                {
                                    <option value="@OrderStatus.Shipping" selected>Đang vận chuyển</option>
                                    <option value="@OrderStatus.Completed">Hoàn thành</option>
                                    <option value="@OrderStatus.Cancelled">Hủy đơn hàng</option>
                                }
                                else if (Model.Status == OrderStatus.Completed)
                                {
                                    <option value="@OrderStatus.Completed" selected>Hoàn thành</option>
                                }
                            </select>
                            <button class="btn btn-primary ml-2" onclick="updateOrderStatus()">
                                <i class="fas fa-save"></i> Cập nhật
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @if (string.IsNullOrEmpty(Model.ShippingOrderCode))
    {
        <script>
            $(document).ready(function() {
                // Load tỉnh/thành phố khi trang được tải
                loadProvinces();

                // Xử lý sự kiện thay đổi tỉnh/thành phố
                $('#provinceSelect').change(function() {
                    const provinceId = $(this).val();
                    if (provinceId) {
                        loadDistricts(provinceId);
                        $('#districtSelect').prop('disabled', false);
                        $('#wardSelect').prop('disabled', true).html('<option value="">Chọn Phường/Xã</option>');
                    } else {
                        $('#districtSelect').prop('disabled', true).html('<option value="">Chọn Quận/Huyện</option>');
                        $('#wardSelect').prop('disabled', true).html('<option value="">Chọn Phường/Xã</option>');
                    }
                    validateForm();
                });

                // Xử lý sự kiện thay đổi quận/huyện
                $('#districtSelect').change(function() {
                    const districtId = $(this).val();
                    if (districtId) {
                        loadWards(districtId);
                        $('#wardSelect').prop('disabled', false);
                        $('#DistrictId').val(districtId);
                    } else {
                        $('#wardSelect').prop('disabled', true).html('<option value="">Chọn Phường/Xã</option>');
                        $('#DistrictId').val('');
                    }
                    validateForm();
                });

                // Xử lý sự kiện thay đổi phường/xã
                $('#wardSelect').change(function() {
                    const wardCode = $(this).val();
                    $('#WardCode').val(wardCode);
                    validateForm();
                });

                // Hàm tải danh sách tỉnh/thành phố
                function loadProvinces() {
                    $.get('/api/address/provinces', function(data) {
                        let html = '<option value="">Chọn Tỉnh/Thành phố</option>';
                        data.forEach(function(province) {
                            html += `<option value="${province.provinceId}">${province.provinceName}</option>`;
                        });
                        $('#provinceSelect').html(html);
                    });
                }

                // Hàm tải danh sách quận/huyện
                function loadDistricts(provinceId) {
                    $.get(`/api/address/districts/${provinceId}`, function(data) {
                        let html = '<option value="">Chọn Quận/Huyện</option>';
                        data.forEach(function(district) {
                            html += `<option value="${district.districtId}">${district.districtName}</option>`;
                        });
                        $('#districtSelect').html(html);
                    });
                }

                // Hàm tải danh sách phường/xã
                function loadWards(districtId) {
                    $.get(`/api/address/wards/${districtId}`, function(data) {
                        let html = '<option value="">Chọn Phường/Xã</option>';
                        data.forEach(function(ward) {
                            html += `<option value="${ward.wardCode}">${ward.wardName}</option>`;
                        });
                        $('#wardSelect').html(html);
                    });
                }

                // Hàm kiểm tra form
                function validateForm() {
                    const wardCode = $('#WardCode').val();
                    const districtId = $('#DistrictId').val();
                    const isValid = wardCode && districtId;
                    $('#submitBtn').prop('disabled', !isValid);
                }
            });

            function calculateShippingFee() {
                const wardCode = $('#wardSelect').val();
                const districtId = parseInt($('#districtSelect').val());
                const serviceId = parseInt($('#serviceSelect').val());

                if (!wardCode || !districtId || !serviceId) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Thông báo',
                        text: 'Vui lòng chọn đầy đủ địa chỉ giao hàng và gói dịch vụ'
                    });
                    return;
                }

                // Lưu giá trị vào hidden inputs
                $('#WardCode').val(wardCode);
                $('#DistrictId').val(districtId);

                const length = parseInt($('#Length').val()) || 20;
                const width = parseInt($('#Width').val()) || 20;
                const height = parseInt($('#Height').val()) || 10;

                $.ajax({
                    url: 'https://dev-online-gateway.ghn.vn/shiip/public-api/v2/shipping-order/fee',
                    method: 'POST',
                    headers: {
                        'Token': '@Configuration["GHN:Token"]',
                        'Content-Type': 'application/json'
                    },
                    data: JSON.stringify({
                        service_id: serviceId,
                        insurance_value: parseInt(@Model.TotalAmount),
                        coupon: null,
                        from_district_id: parseInt(@Configuration["GHN:FromDistrictId"]),
                        to_district_id: districtId,
                        to_ward_code: wardCode,
                        height: height,
                        length: length,
                        weight: 200,
                        width: width
                    }),
                    success: function(response) {
                        if (response.code === 200) {
                            $('#shippingFeeInfo').show();
                            $('#shippingFee').text(response.data.total.toLocaleString());
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: response.message || 'Không thể tính phí vận chuyển'
                            });
                        }
                    },
                    error: function(xhr) {
                        console.error('API Error:', xhr);
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Không thể kết nối đến server GHN'
                        });
                    }
                });
            }

            function createShippingOrder() {
                const wardCode = $('#WardCode').val();
                const districtId = $('#DistrictId').val();
                const serviceId = $('#serviceSelect').val();
                const length = $('#Length').val();
                const width = $('#Width').val();
                const height = $('#Height').val();

                if (!wardCode || !districtId || !serviceId) {
                    alert('Vui lòng chọn đầy đủ địa chỉ giao hàng và gói dịch vụ');
                    return;
                }

                const data = {
                    id: '@Model.OrderId',
                    wardCode: wardCode,
                    districtId: parseInt(districtId),
                    serviceId: parseInt(serviceId),
                    length: parseInt(length),
                    width: parseInt(width),
                    height: parseInt(height)
                };

                $.ajax({
                    url: '/Admin/Order/CreateShippingOrder',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    success: function(response) {
                        if (response.success) {
                            location.reload();
                        } else {
                            alert('Lỗi khi tạo đơn vận chuyển: ' + response.message);
                        }
                    },
                    error: function(xhr) {
                        alert('Có lỗi xảy ra khi tạo đơn vận chuyển');
                    }
                });
            }

            function loadShippingServices() {
                const districtId = $('#districtSelect').val();
                if (!districtId) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Thông báo',
                        text: 'Vui lòng chọn quận/huyện trước'
                    });
                    return;
                }

                // Reset và disable service select
                $('#serviceSelect').html('<option value="">Đang tải gói dịch vụ...</option>').prop('disabled', true);
                
                // Gọi API lấy services
                $.ajax({
                    url: '/Admin/Order/GetAvailableServices',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify({
                        from_district: parseInt(@Configuration["GHN:FromDistrictId"]), // District ID của shop
                        to_district: parseInt(districtId)
                    }),
                    success: function(response) {
                        console.log('API Response:', response); // Debug log
                        if (response.success) {
                            let html = '<option value="">Chọn gói dịch vụ</option>';
                            response.data.forEach(service => {
                                html += `<option value="${service.service_id}">${service.short_name}</option>`;
                            });
                            $('#serviceSelect').html(html).prop('disabled', false);
                        } else {
                            $('#serviceSelect').html('<option value="">Không thể tải gói dịch vụ</option>');
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: response.message || 'Không thể tải gói dịch vụ'
                            });
                        }
                    },
                    error: function(xhr) {
                        console.error('API Error:', xhr); // Debug log
                        $('#serviceSelect').html('<option value="">Lỗi khi tải gói dịch vụ</option>');
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: 'Không thể kết nối đến server: ' + (xhr.responseText || 'Unknown error')
                        });
                    }
                });
            }

            // Thêm event listener cho district select
            $('#districtSelect').change(function() {
                loadShippingServices();
            });

            // Thêm event listener cho service select
            $('#serviceSelect').change(function() {
                const serviceName = $(this).find('option:selected').text();
                if ($(this).val()) {
                    Swal.fire({
                        title: 'Xác nhận',
                        text: `Bạn có muốn tính phí vận chuyển cho gói "${serviceName}"?`,
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonText: 'Có, tính phí',
                        cancelButtonText: 'Không'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            calculateShippingFee();
                        }
                    });
                }
            });
        </script>
    }
    else
    {
        <script>
            function updateOrderStatus() {
                const status = $('#orderStatus').val();
                $.post('/Admin/Order/UpdateOrderStatus', { 
                    orderId: @Model.OrderId, 
                    newStatus: status 
                })
                .done(function(response) {
                    if (response.success) {
                        // Hiển thị thông báo thành công
                        const alertHtml = `
                            <div class="alert alert-success alert-dismissible fade show" role="alert">
                                <i class="fas fa-check-circle"></i> Cập nhật trạng thái thành công!
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>`;
                        $('.card-body').prepend(alertHtml);
                        
                        // Tự động động tải lại trang sau 1 giây
                        setTimeout(function() {
                            location.reload();
                        }, 1000);
                    } else {
                        alert(response.message || 'Có lỗi xảy ra khi cập nhật trạng thái');
                    }
                })
                .fail(function(xhr) {
                    alert('Có lỗi xảy ra khi cập nhật trạng thái: ' + xhr.responseText);
                });
            }
        </script>
    }

    <script>
        // Tự động ẩn alert thông báo sau 5 giây
        setTimeout(function() {
            $('.alert:not(#shippingFeeInfo)').alert('close');
        }, 5000);
    </script>

    <script>
        function printOrder(type) {
            // Gọi API để lấy token
            fetch('https://dev-online-gateway.ghn.vn/shiip/public-api/v2/a5/gen-token', {
                method: 'POST',
                headers: {
                    'Token': '@Configuration["GHN:Token"]',
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    order_codes: ['@Model.ShippingOrderCode']
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.code === 200) {
                    const token = data.data.token;
                    let printUrl = '';
                    
                    // Chọn URL in dựa vào loại in
                    switch(type) {
                        case 'A5':
                            printUrl = `https://dev-online-gateway.ghn.vn/a5/public-api/printA5?token=${token}`;
                            break;
                        case '80x80':
                            printUrl = `https://dev-online-gateway.ghn.vn/a5/public-api/print80x80?token=${token}`;
                            break;
                        case '50x72':
                            printUrl = `https://dev-online-gateway.ghn.vn/a5/public-api/print52x70?token=${token}`;
                            break;
                    }
                    
                    // Mở tab mới để in
                    window.open(printUrl, '_blank');
                } else {
                    alert('Không thể lấy token in vận đơn. Vui lòng thử lại!');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi lấy token in vận đơn!');
            });
        }
    </script>
} 