@model ShoeStore.Models.Product

@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="BrandId" class="control-label"></label>
                <select asp-for="BrandId" class="form-control" asp-items="ViewBag.BrandId">
                    <option value="">-- Select Brand --</option> 
                </select>
                <span asp-validation-for="BrandId" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>


            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId">
                    <option value="">-- Select Category --</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" type="number" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ImagePath" class="control-label">Hình ảnh</label>
                <input name="ImageFile" type="file" class="form-control" accept="image/*" />
                <span asp-validation-for="ImagePath" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<ProductStatus>()"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Header {
    <link rel="stylesheet" href="~/Admin/plugins/ckeditor5/ckeditor5.css">
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="importmap">
        {
            "imports": {
                "ckeditor5": "/Admin/plugins/ckeditor5/ckeditor5.js",
                "ckeditor5/": "/Admin/plugins/ckeditor5/"
            }
        }
    </script>

    <script type="module">
        import {
            ClassicEditor,
            Essentials,
            Paragraph,
            Bold,
            Italic,
            Font,
            HtmlEmbed
        } from 'ckeditor5';

        ClassicEditor
            .create(document.querySelector('#Description'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font, HtmlEmbed],
                toolbar: [
                    'undo', 'redo', '|', 
                    'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
                    'htmlEmbed'
                ],
                htmlEmbed: {
                    showPreviews: true,
                    sanitizeHtml: (inputHtml) => {
                        // Không sanitize HTML để giữ nguyên các thẻ
                        return {
                            html: inputHtml,
                            hasChanged: false
                        };
                    }
                }
            })
            .then(editor => {
                window.editor = editor;
                
                // Xử lý dữ liệu trước khi submit
                document.querySelector('form').addEventListener('submit', function(e) {
                    const descriptionInput = document.querySelector('#Description');
                    const editorData = editor.getData();
                    // Loại bỏ các thẻ p không cần thiết
                    const cleanData = editorData.replace(/<p>&nbsp;<\/p>/g, '');
                    descriptionInput.value = cleanData;
                });
            })
            .catch(error => {
                console.error(error);
            });
    </script>
    <script>
        window.onload = () => {
            document.getElementById("ImagePath").onchange = (e) => {
                var preview = document.getElementById('imgPreview');
                var file = e.target.files[0];
                var reader = new FileReader();

                reader.onloadend = function () {
                    preview.src = reader.result;
                }

                if (file) {
                    reader.readAsDataURL(file);
                } else {
                    preview.src = '';
                }
            };
        }
    </script>

}

