@model ShoeStore.Models.Product

@{
    ViewData["Title"] = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="BrandId" class="control-label"></label>
                <select asp-for="BrandId" class="form-control" asp-items="ViewBag.BrandId">
                    <option value="">-- Select Brand --</option> 
                </select>
                <span asp-validation-for="BrandId" class="text-danger"></span>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="Name" class="form-label font-weight-bold">Product Name</label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="Price" class="form-label font-weight-bold">Price</label>
                    <input asp-for="Price" type="text" class="form-control price-input" data-type="currency" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-3">
                    <label asp-for="DiscountPrice" class="form-label font-weight-bold">Discount Price</label>
                    <input asp-for="DiscountPrice" type="text" class="form-control price-input" data-type="currency" />
                    <span asp-validation-for="DiscountPrice" class="text-danger"></span>
                </div>
                <div class="col-md-6 mb-3">
                    <label asp-for="Status" class="form-label font-weight-bold">Status</label>
                    <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<ProductStatus>()"></select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="ImagePath" class="form-label font-weight-bold">Hình ảnh sản phẩm</label>
                <input type="file" name="ImageFile" id="ImageFile" class="form-control" accept="image/*" />
                <span asp-validation-for="ImagePath" class="text-danger"></span>

                <div class="mt-3">
                    <label class="form-label">Xem trước ảnh:</label>
                    <div class="border rounded p-2">
                        <img id="preview" class="img-fluid" style="max-height: 200px; display: none;" />
                    </div>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId">
                    <option value="">-- Select Category --</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Header {
    <link rel="stylesheet" href="~/Admin/plugins/ckeditor5/ckeditor5.css">
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="importmap">
        {
            "imports": {
                "ckeditor5": "/Admin/plugins/ckeditor5/ckeditor5.js",
                "ckeditor5/": "/Admin/plugins/ckeditor5/"
            }
        }
    </script>

    <script type="module">
        import {
            ClassicEditor,
            Essentials,
            Paragraph,
            Bold,
            Italic,
            Font,
            RemoveFormat
        } from 'ckeditor5';

        ClassicEditor
            .create(document.querySelector('#Description'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font, RemoveFormat],
                toolbar: [
                    'undo', 'redo', '|', 
                    'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', '|',
                    'removeFormat'
                ],
                removePlugins: ['MediaEmbed', 'Table', 'TableToolbar', 'TableProperties', 'TableCellProperties'],
            })
            .then(editor => {
                window.editor = editor;
                
                // Xử lý dữ liệu trước khi submit
                document.querySelector('form').addEventListener('submit', function(e) {
                    const descriptionInput = document.querySelector('#Description');
                    let editorData = editor.getData();
                    
                    // Loại bỏ các thẻ p rỗng
                    editorData = editorData.replace(/<p>&nbsp;<\/p>/g, '');
                    editorData = editorData.replace(/<p><br><\/p>/g, '');
                    
                    // Loại bỏ các thẻ không cần thiết
                    editorData = editorData.replace(/<\/?strong>/g, '');
                    editorData = editorData.replace(/<\/?p>/g, '');
                    
                    // Loại bỏ khoảng trắng thừa
                    editorData = editorData.trim();
                    
                    descriptionInput.value = editorData;
                });
            })
            .catch(error => {
                console.error(error);
            });
    </script>
    <script>
        document.getElementById('ImageFile').addEventListener('change', function (e) {
            const preview = document.getElementById('preview');
            const file = e.target.files[0];
            
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                }
                reader.readAsDataURL(file);
            } else {
                preview.src = '';
                preview.style.display = 'none';
            }
        });
    </script>

    <script>
        // Định dạng input thành tiền VND
        $("input[data-type='currency']").on({
            keyup: function() {
                formatCurrency($(this));
            },
            blur: function() { 
                formatCurrency($(this));
            }
        });

        function formatNumber(n) {
            // Chỉ lấy số nguyên, không có phần thập phân
            return n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        function formatCurrency(input) {
            var input_val = input.val();
            
            // Không validate nếu rỗng
            if (input_val === "") { return; }
            
            // Xóa tất cả ký tự không phải số
            input_val = input_val.replace(/[^0-9]/g, "");
            
            // Format số với dấu phẩy
            if (input_val !== "") {
                input_val = parseInt(input_val).toString();
                input_val = formatNumber(input_val);
            }

            // Thêm đơn vị tiền tệ
            input_val += " đ";
            
            // Gán giá trị đã format vào input
            input.val(input_val);
        }

        // Format giá trị ban đầu khi load trang
        $(document).ready(function() {
            $("input[data-type='currency']").each(function() {
                var value = $(this).val();
                if (value) {
                    // Chuyển đổi sang số nguyên và format
                    value = parseInt(value).toString();
                    value = formatNumber(value);
                    $(this).val(value + " đ");
                }
            });
        });

        // Xử lý trước khi submit form
        $('form').submit(function() {
            $('.price-input').each(function() {
                // Chỉ lấy số, bỏ dấu phẩy và ký tự đ
                var value = $(this).val().replace(/[^0-9]/g, '');
                $(this).val(value);
            });
            return true;
        });
    </script>
}

