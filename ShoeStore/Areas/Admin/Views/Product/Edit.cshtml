@model ShoeStore.Models.Product

@{
    ViewData["Title"] = "Edit Product";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h4 class="m-0 font-weight-bold text-primary">Edit Product</h4>
    </div>
    <div class="card-body">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="alert alert-danger"></div>

            <input type="hidden" asp-for="ProductId" />

            <div class="row">
                <!-- Brand Dropdown -->
                <div class="col-md-6 mb-3">
                    <label asp-for="BrandId" class="form-label font-weight-bold">Brand</label>
                    <select asp-for="BrandId" class="form-control" asp-items="ViewBag.BrandId">
                        <option value="">-- Select Brand --</option>
                    </select>
                    <span asp-validation-for="BrandId" class="text-danger"></span>
                </div>

                <!-- Category Dropdown -->
                <div class="col-md-6 mb-3">
                    <label asp-for="CategoryId" class="form-label font-weight-bold">Category</label>
                    <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId">
                        <option value="">-- Select Category --</option>
                    </select>
                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <!-- Product Name -->
                <div class="col-md-6 mb-3">
                    <label asp-for="Name" class="form-label font-weight-bold">Product Name</label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>

                <div class="col-md-6 mb-3">
                    <label asp-for="ProductCode" class="form-label font-weight-bold">Mã sản phẩm</label>
                    <input asp-for="ProductCode" class="form-control" placeholder="Ví dụ: CW2288-111" />
                    <span asp-validation-for="ProductCode" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <!-- Price -->
                <div class="col-md-6 mb-3">
                    <label asp-for="Price" class="form-label font-weight-bold">Price</label>
                    <input type="hidden" asp-for="Price" id="actualPrice" />
                    <input type="text" class="form-control price-display" data-type="currency" maxlength="12" onkeypress="return isNumberKey(event)" value="@Model.Price.ToString("#,##0")" />
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>

                <!-- Discount Price -->
                <div class="col-md-6 mb-3">
                    <label asp-for="DiscountPrice" class="form-label font-weight-bold">Discount Price</label>
                    <input type="hidden" asp-for="DiscountPrice" id="actualDiscountPrice" />
                    <input type="text" class="form-control price-display" data-type="currency" maxlength="12" onkeypress="return isNumberKey(event)" value="@Model.DiscountPrice.ToString("#,##0")" />
                    <span asp-validation-for="DiscountPrice" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <!-- Status -->
                <div class="col-md-6 mb-3">
                    <label asp-for="Status" class="form-label font-weight-bold">Status</label>
                    <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<ProductStatus>()"></select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>

                <!-- Product Flags -->
                <div class="col-md-6 mb-3">
                    <label class="form-label font-weight-bold">Trạng thái sản phẩm</label>
                    <div class="custom-controls-stacked">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" asp-for="IsNew" class="custom-control-input" id="isNew">
                            <label class="custom-control-label" for="isNew">Sản phẩm mới</label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" asp-for="IsHot" class="custom-control-input" id="isHot">
                            <label class="custom-control-label" for="isHot">Sản phẩm hot</label>
                        </div>
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" asp-for="IsSale" class="custom-control-input" id="isSale">
                            <label class="custom-control-label" for="isSale">Đang giảm giá</label>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Description -->
            <div class="mb-3">
                <label asp-for="Description" class="form-label font-weight-bold">Description</label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            <!-- Image Upload -->
            <div class="form-group">
                <label>Ảnh đại diện hiện tại</label>
                <div class="mb-2">
                    @if (!string.IsNullOrEmpty(Model.ImagePath))
                    {
                        <img src="@Model.ImagePath" alt="Main Product Image" class="img-fluid" style="max-height: 200px;" />
                    }
                </div>
                
                <label>Thay đổi ảnh đại diện</label>
                <input type="file" name="mainImage" id="mainImage" class="form-control" accept="image/*" />
                <div id="mainImagePreview" class="mt-2"></div>
                <small class="form-text text-muted">Ảnh đại diện sẽ hiển thị ở trang chủ và danh sách sản phẩm</small>
            </div>

            <!-- Submit Button -->
            <div class="d-flex justify-content-between">
                <a asp-action="Index" class="btn btn-secondary">Back to List</a>
                <button type="submit" class="btn btn-primary">Save Changes</button>
            </div>
        </form>
    </div>
</div>

@section Header {
    <link rel="stylesheet" href="~/Admin/plugins/ckeditor5/ckeditor5.css">
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script type="importmap">
        {
            "imports": {
                "ckeditor5": "/Admin/plugins/ckeditor5/ckeditor5.js",
                "ckeditor5/": "/Admin/plugins/ckeditor5/"
            }
        }
    </script>
    <script type="module">
        import {
            ClassicEditor,
            Essentials,
            Paragraph,
            Bold,
            Italic,
            Font
        } from 'ckeditor5';

        ClassicEditor
            .create(document.querySelector('#Details'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font],
                toolbar: [
                    'undo', 'redo', '|', 'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error(error);
            });
    </script>

    <script type="module">
        import {
            ClassicEditor,
            Essentials,
            Paragraph,
            Bold,
            Italic,
            Font
        } from 'ckeditor5';

        ClassicEditor
            .create(document.querySelector('#Description'), {
                plugins: [Essentials, Paragraph, Bold, Italic, Font],
                toolbar: [
                    'undo', 'redo', '|', 'bold', 'italic', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor'
                ]
            })
            .then(editor => {
                window.editor = editor;
            })
            .catch(error => {
                console.error(error);
            });
    </script>
    <script>
        // Hàm chỉ cho phép nhập số
        function isNumberKey(evt) {
            var charCode = (evt.which) ? evt.which : evt.keyCode;
            if (charCode > 31 && (charCode < 48 || charCode > 57))
                return false;
            return true;
        }

        // Validate form trước khi submit
        $('form').on('submit', function (e) {
            e.preventDefault();
            
            // Lấy giá trị
            var price = parseInt($('#actualPrice').val()) || 0;
            var discountPrice = parseInt($('#actualDiscountPrice').val()) || 0;
            
            // Kiểm tra giá hợp lệ
            if (price <= 0) {
                alert('Giá sản phẩm phải lớn hơn 0');
                return false;
            }
            
            if (price > 999999999) {
                alert('Giá sản phẩm không được vượt quá 999,999,999đ');
                return false;
            }
            
            // Kiểm tra giá khuyến mãi
            if (discountPrice >= price) {
                alert('Giá khuyến mãi phải nhỏ hơn giá gốc');
                return false;
            }
            
            // Nếu mọi thứ ok thì submit form
            this.submit();
        });

        // Preview ảnh khi chọn file
        $('#mainImage').change(function() {
            var file = this.files[0];
            if (file) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    $('#mainImagePreview').html('<img src="' + e.target.result + '" class="img-fluid" style="max-height: 200px;">');
                }
                reader.readAsDataURL(file);
                alert('Đã chọn ảnh: ' + file.name);
            }
        });

        // Định dạng input thành tiền VND
        $("input[data-type='currency']").on({
            keyup: function() {
                formatCurrency($(this));
            },
            blur: function() { 
                formatCurrency($(this));
            },
            // Ngăn chặn paste chữ
            paste: function(e) {
                e.preventDefault();
                var text = (e.originalEvent || e).clipboardData.getData('text/plain');
                if (!/^\d*$/.test(text)) { // Kiểm tra xem có chứa ký tự không phải số không
                    return false;
                }
                var value = text.replace(/[^0-9]/g, "");
                if (value.length > 9) {
                    value = value.substring(0, 9);
                }
                $(this).val(value);
                formatCurrency($(this));
            },
            // Ngăn chặn kéo thả chữ
            drop: function(e) {
                e.preventDefault();
                return false;
            }
        });

        function formatCurrency(input) {
            // Lấy giá trị và chỉ giữ lại số
            var value = input.val().replace(/[^0-9]/g, "");
            
            // Giới hạn độ dài tối đa là 12 ký tự
            if (value.length > 12) {
                value = value.substring(0, 12);
            }
            
            // Kiểm tra giới hạn
            var numValue = parseInt(value) || 0;
            if (numValue > 999999999999) {
                value = "999999999999";
                alert('Giá tối đa là 999,999,999,999đ');
            }
            
            // Format số với dấu phẩy nếu có giá trị
            if (value !== "") {
                input.val(formatNumber(value));
                
                // Cập nhật giá trị thực vào input ẩn
                var hiddenInput = input.prev('input[type="hidden"]');
                if (hiddenInput.length > 0) {
                    hiddenInput.val(value);
                }
            }
        }

        function formatNumber(n) {
            return n.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        }

        // Format giá trị ban đầu khi load trang
        $(document).ready(function() {
            $("input[data-type='currency']").each(function() {
                formatCurrency($(this));
            });
        });
    </script>
}
